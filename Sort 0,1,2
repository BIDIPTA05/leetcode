//DNF - ALOGRITHM 0(N) O(1)
//USING IF ELSE STATEMENT
class Solution {
public:
    void sortColors(vector<int>& nums) {
    int low =0 ;
    int high = nums.size()-1;
    int mid = 0;  
    while(mid<=high){
        if(nums[mid]==0){
        //if the element us 0
            
                swap(nums[low++],nums[mid++]);
               }
        //if the element is 1
           else if(nums[mid]==1){
                mid++;
           }
        //if the element is 2
            else if(nums[mid]==2){
                swap(nums[mid],nums[high--]);
                }
        }
        
    }
};


//USING SWITCH STATMENT - DNF ALGORITHM

class Solution {
public:
    void sortColors(vector<int>& nums) {
    int low =0 ;
    int high = nums.size()-1;
    int mid = 0;  
    while(mid<=high){
        switch(nums[mid]){
        //if the element us 0
            case 0:
                swap(nums[low++],nums[mid++]);
                break;
        //if the element is 1
            case 1:
                mid++;
                break;
        //if the element is 2
            case 2:
                swap(nums[mid],nums[high--]);
                break;
        }
      }   
    }
};

